java.util.regex
类 Pattern
java.lang.Object
  继承者 java.util.regex.Pattern
所有已实现的接口：
Serializable

--------------------------------------------------------------------------------

public final class Patternextends Objectimplements Serializable正则表达式的编译表示形式。

指定为字符串的正则表达式必须首先被编译为此类的实例。然后，可将得到的模式用于创建 Matcher 对象，依照正则表达式，该对象可以与任意字符序列匹配。执行匹配所涉及的所有状态都驻留在匹配器中，所以多个匹配器可以共享同一模式。

因此，典型的调用顺序是

 Pattern p = Pattern.compile("a*b");
 Matcher m = p.matcher("aaaaab");
 boolean b = m.matches();在仅使用一次正则表达式时，可以方便地通过此类定义 matches 方法。此方法编译表达式并在单个调用中将输入序列与其匹配。语句

 boolean b = Pattern.matches("a*b", "aaaaab");等效于上面的三个语句，尽管对于重复的匹配而言它效率不高，因为它不允许重用已编译的模式。
此类的实例是不可变的，可供多个并发线程安全使用。Matcher 类的实例用于此目的则不安全。



字符
   x 字符x  比如：字符'a'就表示字符a
   \\ 反斜线字符  这里字符'\' 用两个\\其中一个\用于转义
   \n 新行（换行）符 ('\u000A')
   \r 回车符 ('\u000D')


字符类

     [abc] a、b 或 c（简单类） --> []表示该范围类中字符的其中一个字符
